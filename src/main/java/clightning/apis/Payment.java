package clightning.apis;

public interface Payment {
    /**
     * decodepay bolt11 [description]
     *     Decode {bolt11}, using {description} if necessary
     */
    void decodePay();

    /**
     *
     * delexpiredinvoice [maxexpirytime]
     *     Delete all expired invoices that expired as of given {maxexpirytime} (a UNIX epoch time), or all expired invoices if not specified
     */
    void delExpiredInvoice();

    /**
     * delinvoice label status
     *     Delete unpaid invoice {label} with {status}
     */
    void delInvoice();

    /**
     * https://lightning.readthedocs.io/lightning-invoice.7.html
     *
     * invoice msatoshi label description [expiry] [fallbacks] [preimage] [exposeprivatechannels]
     *     Create an invoice for {msatoshi} with {label} and {description} with optional {expiry} seconds (default 1 week), optional {fallbacks} address list(default empty list) and optional {preimage} (default autogenerated)
     *
     * expiry: <numeric value>[s|m|h|d|w], indicate seconds,
     *     minutes, hours, days and weeks respectively, s by
     *     default if suffix is omitting. Default to 604800 (1w)
     *
     * fallbacks: one or more fallback addresses to include in the invoice
     *
     * The preimage is a 64-digit hex string to be used as payment preimage for the created
     * invoice. By default, if unspecified, lightningd will generate a secure pseudorandom
     * preimage seeded from an appropriate entropy source on your system. IMPORTANT: if you
     * specify the preimage, you are responsible, to ensure appropriate care for generating
     * using a secure pseudorandom generator seeded with sufficient entropy, and keeping the
     * preimage secret. This parameter is an advanced feature intended for use with cutting-edge
     * cryptographic protocols and should not be used unless explicitly needed.
     *
     * If specified, exposeprivatechannels overrides the default route hint logic, which will
     * use unpublished channels only if there are no published channels. If true unpublished
     * channels are always considered as a route hint candidate; if false, never.
     *
     *
     */
    void invoice();

    /**
     * listinvoices [label]
     *     Show invoice {label} (or all, if no {label})
     */
    void listInvoices();

    /**
     * listsendpays [bolt11] [payment_hash]
     *     Show sendpay, old and current, optionally limiting to {bolt11} or {payment_hash}.
     */
    void listSendPays();

    /**
     * listtransactions
     *     List transactions that we stored in the wallet
     */
    void listTransactions();

    /**
     * sendpay route payment_hash [label] [msatoshi] [bolt11]
     *     Send along {route} in return for preimage of {payment_hash}
     */
    void sendPay();

    /**
     * waitanyinvoice [lastpay_index]
     *     Wait for the next invoice to be paid, after {lastpay_index} (if supplied)
     */
    void waitAnyInvoice();

    /**
     * waitinvoice label
     *     Wait for an incoming payment matching the invoice with {label}, or if the invoice expires
     */
    void waitInvoice();

    /**
     * waitsendpay payment_hash [timeout]
     *     Wait for payment attempt on {payment_hash} to succeed or fail, but only up to {timeout} seconds.
     */
    void waitSendPay();
}
